- hosts: "{{ target }}"
  vars:
    ansible_ssh_user: root
    sshd: sshd
    sshd_config: /etc/ssh/sshd_config
    sudo_config: /etc/sudoers
  vars_prompt:
    - name: "ansible_ssh_pass"
      prompt: "ssh: root password"
  handlers:
    - name: restart sshd
      service: name={{ sshd }} state=restarted

  tasks:
    - name: install sudo
      package:
        name: sudo
        state: present

    - name: create user googol
      user:
        name: googol
        shell: /bin/bash
        groups: systemd-journal
        append: yes
        password: $6$0u9r9KYF$QZ0tOZbqGjepGKVJDAPuZzSchQAx19fiCuC4R85ke00YO2QXaB6j0lf3An8g9C20G96YeE7zNpppvmDlBwK281

    - name: set authorized key for googol
      authorized_key:
        user: googol
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
      register: add_identity_key

    - name: disable sudo password
      lineinfile:
        path: "{{ sudo_config }}"
        line: "googol\tALL=(ALL:ALL) NOPASSWD:ALL"

    - name: disable remote root login
      lineinfile: 
        path: "{{ sshd_config }}"
        regexp: "^#?PermitRootLogin"
        line: "PermitRootLogin no"
      notify: restart sshd
      when: not target is match("^lg.*$")

    - name: disable password login
      lineinfile:
        path: "{{ sshd_config }}"
        regexp: "^#?PasswordAuthentication"
        line: "PasswordAuthentication no"
      when: add_identity_key is success and
            not add_identity_key is skipped and
            not target is match("^lg.*$")
      notify: restart sshd
