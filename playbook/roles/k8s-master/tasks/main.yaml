---
- name: check bin
  shell: "[ `kubelet --version | sed 's/Kubernetes *//'` = '{{ vars.k8s_version }}' ]"
  register: kube
  ignore_errors: yes
  failed_when: kube|failed or kube.rc != 0
  changed_when: kube|failed or kube.rc != 0

- name: get bin
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ vars.k8s_version }}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl
    - kubelet
  become: yes
  when: kube|failed
  register: bin

- name: check conf dir
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
    owner: root
    group: root
  items:
    - /etc/k8s/root
    - /etc/k8s/etcd
    - /etc/k8s/k8s
  become: yes

- name: copy key
  copy:
    src: "{{ item }}"
    dest: "/etc/k8s/{{ item | regex_replace('^k8s.global/') }}"
    mode: 0644
    owner: root
    group: root
  items:
    - k8s.global/root/ca.pem
    - k8s.global/root/ca-key.pem
    - k8s.global/etcd/api.pem
    - k8s.global/etcd/api-key.pem
    - k8s.global/k8s/master.pem
    - k8s.global/k8s/master-key.pem
    - k8s.global/k8s/master-token.csv
  become: yes
  register: keys

- name: register service
  copy:
    src: "{{ item }}"
    dest: "/usr/lib/systemd/system/{{ item }}"
    mode: 0644
    owner: root
    group: root
  items:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
  become: yes
  register: conf

- name: launch systemd
  systemd:
    name: "{{ item }}"
    state: started
  items:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
  become: yes
  register: systemd

- name: relaunch systemd
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
  items:
    - kube-apiserver.service
    - kube-controller-manager.service
    - kube-scheduler.service
  become: yes
  when: bin.changed or keys.changed or conf.changed or systemd|failed
